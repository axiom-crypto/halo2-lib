window.SIDEBAR_ITEMS = {"struct":[["SafeType","SafeType’s goal is to avoid out-of-range undefined behavior. When building circuits, it’s common to use multiple AssignedValue to represent a logical variable. For example, we might want to represent a hash with 32 AssignedValue where each AssignedValue represents 1 byte. However, the range of AssignedValue is much larger than 1 byte(0~255). If a circuit takes 32 AssignedValue as inputs and some of them are actually greater than 255, there could be some undefined behaviors. SafeType gurantees the value range of its owned AssignedValue. So circuits don’t need to do any extra value checking if they take SafeType as inputs. TOTAL_BITS is the number of total bits of this type. BYTES_PER_ELE is the number of bytes of each element."],["SafeTypeChip","Chip for SafeType"]],"type":[["SafeBool","SafeType for bool."],["SafeBytes32","SafeType for bytes32."],["SafeUint128","SafeType for uint128."],["SafeUint16","SafeType for uint16."],["SafeUint256","SafeType for uint256."],["SafeUint32","SafeType for uint32."],["SafeUint64","SafeType for uint64."],["SafeUint8","SafeType for uint8."]]};