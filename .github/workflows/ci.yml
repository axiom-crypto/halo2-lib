name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main", "develop", "community-edition", "release-*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest-64core-256ram

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose
      - name: Run halo2-base tests
        working-directory: "halo2-base"
        run: |
          cargo test
      - name: Run halo2-ecc tests (mock prover)
        working-directory: "halo2-ecc"
        run: |
          cargo test --lib -- --skip bench
      - name: Run halo2-ecc tests (real prover)
        working-directory: "halo2-ecc"
        run: |
          mv configs/bn254/bench_fixed_msm.t.config configs/bn254/bench_fixed_msm.config
          mv configs/bn254/bench_msm.t.config configs/bn254/bench_msm.config
          mv configs/bn254/bench_pairing.t.config configs/bn254/bench_pairing.config
          mv configs/secp256k1/bench_ecdsa.t.config configs/secp256k1/bench_ecdsa.config
          cargo test --release -- --nocapture bench_secp256k1_ecdsa
          cargo test --release -- --nocapture bench_fixed_base_msm
          cargo test --release -- --nocapture bench_msm
          cargo test --release -- --nocapture bench_pairing
      - name: Run zkevm tests
        working-directory: "hashes/zkevm"
        run: |
          cargo test packed_multi_keccak_prover::k_14

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: false
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Run fmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all --all-targets -- -D warnings

      - name: Generate Cargo.lock
        run: cargo generate-lockfile

      - name: Run cargo audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
